--- a/third_party/abseil-cpp/absl/base/internal/raw_logging.cc
+++ b/third_party/abseil-cpp/absl/base/internal/raw_logging.cc
@@ -203,6 +203,9 @@ void AsyncSignalSafeWriteError(const char* s, size_t len) {
 }
 }  // namespace
 
+// Mark symbols as weak to avoid conflicts with V8
+__attribute__((weak))
 void AsyncSignalSafeWriteError(const char* s, size_t len) {
   // We prefer to use the write() system call directly here to avoid
   // potential issues with buffering in fprintf() or other higher-level
@@ -244,6 +247,7 @@ void AsyncSignalSafeWriteError(const char* s, size_t len) {
 }
 
 }  // namespace
+__attribute__((weak))
 void RawLog(LogSeverity severity, const char* file, int line,
             const char* format, ...) {
   // Since we're already logging, malloc() might not work, so we use a
@@ -266,10 +270,12 @@ void RawLog(LogSeverity severity, const char* file, int line,
   // We leave the function, and return or crash normally.
 }
 
+__attribute__((weak))
 bool RawLoggingFullySupported() {
   return ABSL_LOW_LEVEL_WRITE_SUPPORTED;
 }
 
+__attribute__((weak))
 void RegisterLogFilterAndPrefixHook(
     bool (*filter_and_prefix_hook)(LogSeverity severity, const char* file,
                                     int line, char** buf, int* buf_size)) {
@@ -277,6 +283,7 @@ void RegisterLogFilterAndPrefixHook(
   log_filter_and_prefix_hook = filter_and_prefix_hook;
 }
 
+__attribute__((weak))
 void RegisterAbortHook(void (*abort_hook)(const char* file, int line,
                                           const char* buf_start,
                                           const char* prefix_end,
